// ->
ZMK_MACRO(arrow,
    bindings = <&kp MINUS &kp GT>;
)

// =>
ZMK_MACRO(fat_arrow,
    bindings = <&kp EQUAL &kp GT>;
)

// Glyphs

ZMK_HOLD_TAP(glyphs_mod,
   tapping-term-ms = <TAPPING_TERM>;
   bindings = <&kp>, <&sl>;
)
#define GLYPHS(MOD) &glyphs_mod MOD GLYPHS1

ZMK_HOLD_TAP(lt_g_space,
    flavor = "hold-preferred";
    tapping-term-ms = <200>;
    bindings = <&mo>, <&g_space>;
)
#define LT_G_SPACE &lt_g_space GLYPHS2 0

#define GLYPH(name, N1, N2, N3, N4) \
    UC_MACRO(name, &kp N1 &kp N2 &kp N3 &kp N4)

GLYPH(g_shift,     N2, N1, E,  N7) // ⇧
GLYPH(g_cmd,       N2, N3, N1, N8) // ⌘
GLYPH(g_ctrl,      N2, N3, N0, N3) // ⌃
GLYPH(g_opt,       N2, N3, N2, N5) // ⌥
GLYPH(g_left,      N2, N1, N9, N0) // ←
GLYPH(g_down,      N2, N1, N9, N3) // ↓
GLYPH(g_up,        N2, N1, N9, N1) // ↑
GLYPH(g_right,     N2, N1, N9, N2) // →
GLYPH(g_space,     N2, N4, N2, N3) // ␣
GLYPH(g_backspace, N2, N3, N2, N3) // ⌫
GLYPH(g_delete,    N2, N3, N2, N6) // ⌦
GLYPH(g_return,    N2, N1, B,  N5) // ↵
GLYPH(g_tab,       N2, N1, E,  N5) // ⇥
GLYPH(g_esc,       N2, N3, N1, B)  // ⎋
GLYPH(g_multiply,  N0, N0, D,  N7) // ×
